<?php

namespace App\Http\Controllers;

use App\Models\Appointment;
use App\Models\User;
use App\Models\Notification;
use App\Models\Doctor;
use App\Models\Hospital;
use App\Models\Schedule;
use App\Models\Patient;
use App\Models\Test;
use App\Models\Medication;
use App\Models\MedicationRecord;
use App\Models\MedicalRecord;
use App\Models\MedicalRecordTest;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\DB;
use Illuminate\Support\Facades\Log;
use Carbon\Carbon;

class AppointmentController extends Controller
{
    public function index()
    {
        return response()->json(Appointment::with(['patient', 'hospital', 'doctor', 'schedule'])->get());
    }

    public function store(Request $request)
    {
        // ๐น ุฌูุจ ุจูุงูุงุช ุงููุณุชุฎุฏู ูู ุงูุชููู
        $user = auth()->user(); // ูููู ุฌูุจ ุจูุงูุงุช ุงููุณุชุฎุฏู ุจูุงุกู ุนูู ุงูุชููู
    
        // ุงูุชุฃูุฏ ูู ุฃู ุงููุณุชุฎุฏู ูู ูุฑูุถ ูุฃู ูุฏูู patient_id
        $patient_id = $user->patient_id;
    
        // ุงูุชุญูู ูู ุตุญุฉ ุงููุฏุฎูุงุช
        $validatedData = $request->validate([
            'doctor_name' => 'required|string',
            'hospital_name' => 'required|string',
            'day_of_week' => 'required|string',
            'start_time' => 'required|date_format:H:i',
            'end_time' => 'required|date_format:H:i',
        ]);
    
        // ุงูุจุญุซ ุนู ุงูุทุจูุจ ุจูุงุกู ุนูู ุงูุงุณู
        $doctor = Doctor::where('doctor_name', $validatedData['doctor_name'])->first();
        if (!$doctor) {
            return response()->json(['error' => 'ุงุณู ุงูุทุจูุจ ุบูุฑ ููุฌูุฏ.'], 404);
        }
    
        // ุงูุจุญุซ ุนู ุงููุณุชุดูู ุจูุงุกู ุนูู ุงูุงุณู
        $hospital = Hospital::where('hospital_name', $validatedData['hospital_name'])->first();
        if (!$hospital) {
            return response()->json(['error' => 'ุงุณู ุงููุณุชุดูู ุบูุฑ ููุฌูุฏ.'], 404);
        }
    
        // ุงูุจุญุซ ุนู ุงูููุนุฏ ุงูููุงุณุจ ูู ุฌุฏูู ููุงุนูุฏ ุงูุทุจูุจ
        $schedule = Schedule::where('doctor_id', $doctor->doctor_id)
                            ->where('hospital_id', $hospital->hospital_id)
                            ->where('day_of_week', $validatedData['day_of_week'])
                            ->where('start_time', $validatedData['start_time'])
                            ->where('end_time', $validatedData['end_time'])
                            ->first();
    
        if (!$schedule) {
            return response()->json(['error' => 'ูุง ููุฌุฏ ููุนุฏ ูุทุงุจู ููุฐุง ุงูููู ูุงูููุช.'], 404);
        }
    
        // ุฅูุดุงุก ุงูููุนุฏ ุงูุฌุฏูุฏ ูู ุญุงูุฉ "ูุนููุฉ" (Pending)
        $appointment = new Appointment();
        $appointment->doctor_id = $doctor->doctor_id;
        $appointment->hospital_id = $hospital->hospital_id;
        $appointment->patient_id = $patient_id; // ุชุฑุญูู ูุนุฑู ุงููุฑูุถ
        $appointment->schedule_id = $schedule->schedule_id;
        $appointment->status = 'Pending'; // ุญุงูุฉ ุงูููุนุฏ ุชููู "ูุนููุฉ" ูู ุงูุจุฏุงูุฉ
        $appointment->save();
    
        // ๐น ุฅุฑุณุงู ุฅุดุนุงุฑ ุฅูู ุงููุณุชุดูู ูุชุฃููุฏ ุงูููุนุฏ
        $this->sendNotificationToHospital($hospital, $appointment);
    
        return response()->json([
            'message' => 'ุชู ุฅุถุงูุฉ ุงูููุนุฏ ุจูุฌุงุญ. ููุชุธุฑ ุชุฃููุฏ ุงููุณุชุดูู.',
            'data' => $appointment
        ], 201);
    }
    
    private function sendNotificationToHospital($hospital, $appointment)
    {
        // ุฅุฑุณุงู ุฅุดุนุงุฑ ุฅูู ุงููุณุชุดูู ุจุงุณุชุฎุฏุงู ุฌุฏูู ุงูุฅุดุนุงุฑุงุช
    
        $notification = new Notification();
        $notification->user_id = $hospital->user_id; // ูุนุฑู ุงููุณุชุฎุฏู ุงูุฎุงุต ุจุงููุณุชุดูู
        $notification->created_by = auth()->user()->patient_id; // ูุชู ูุถุน ูุนุฑู ุงููุฑูุถ ุงูุฐู ุฃุถุงู ุงูููุนุฏ
        $notification->title = "ููุนุฏ ุฌุฏูุฏ ููุชุธุฑ ุชุฃููุฏู";
        $notification->message = "ุชู ุฅุถุงูุฉ ููุนุฏ ุฌุฏูุฏ ูุน ุงูุทุจูุจ " . $appointment->doctor->doctor_name . " ูู ุงููุณุชุดูู " . $appointment->hospital->hospital_name . " ููุชุธุฑ ุชุฃููุฏู.";
        $notification->type = 'booking'; // ููุน ุงูุฅุดุนุงุฑ (ุญุฌุฒ)
        $notification->is_read = 0; // ุฅุดุนุงุฑ ุบูุฑ ููุฑูุก
        $notification->save();
    }



    public function confirmAppointment($appointmentId)
    {
        // ุงูุจุญุซ ุนู ุงูููุนุฏ ุจุงุณุชุฎุฏุงู ุงููุนุฑู
        $appointment = Appointment::find($appointmentId);
    
        // ุงูุชุญูู ุฅุฐุง ูุงู ุงูููุนุฏ ููุฌูุฏูุง
        if (!$appointment) {
            return response()->json(['error' => 'ุงูููุนุฏ ุบูุฑ ููุฌูุฏ.'], 404);
        }
    
        // ุงูุชุญูู ูู ุญุงูุฉ ุงูููุนุฏ ุฅุฐุง ูุงู ูู ุญุงูุฉ "Pending"
        if ($appointment->status !== 'Pending') {
            return response()->json(['error' => 'ุงูููุนุฏ ูุง ูููู ุชุฃููุฏู ูุฃูู ููุณ ูู ุญุงูุฉ "Pending".'], 400);
        }
    
        // ุชุญุฏูุซ ุญุงูุฉ ุงูููุนุฏ ุฅูู "Confirmed"
        $appointment->status = 'Confirmed';
        $appointment->save();
    
        // ุฅุฑุณุงู ุฅุดุนุงุฑ ูููุฑูุถ
        $this->sendNotificationToPatient($appointment);
    
        // ุฅุฑุณุงู ุฅุดุนุงุฑ ููุทุจูุจ
        $this->sendNotificationToDoctor($appointment);
    
        return response()->json(['message' => 'ุชู ุชุฃููุฏ ุงูููุนุฏ ุจูุฌุงุญ.']);
    }
    
    private function sendNotificationToPatient($appointment)
    {
        // ุฅุฑุณุงู ุฅุดุนุงุฑ ูููุฑูุถ ุจุฃู ุงูููุนุฏ ุชู ุชุฃููุฏู
        $patient = Patient::find($appointment->patient_id); // ุงูุญุตูู ุนูู ุงููุฑูุถ ุจุงุณุชุฎุฏุงู patient_id
    
        $notification = new Notification();
        $notification->user_id = $patient->user_id;  // ุชุญุฏูุฏ ุงููุณุชุฎุฏู (ุงููุฑูุถ)
        $notification->created_by = auth()->user()->id ?? $appointment->hospital->user_id;  // ูู ูุงู ุจุฅูุดุงุก ุงูุฅุดุนุงุฑ (ุงููุณุชุดูู) 
        $notification->title = 'ุชูุช ุงูููุงููุฉ ุนูู ุญุฌุฒู';
        $notification->message = 'ุชู ุชุฃููุฏ ุญุฌุฒู ูุน ุงูุฏูุชูุฑ ' . $appointment->doctor->doctor_name . 
        ' ูู ูุณุชุดูู ' . $appointment->hospital->hospital_name . 
        '. ููููู ุชูููู ุงูุทุจูุจ ุงูุฐู ููุช ุจุงูุญุฌุฒ ูุฏูู ุฎูุงู 24 ุณุงุนุฉ ูู ุชุงุฑูุฎ ุงูุญุฌุฒ.';
    
        $notification->type = 'booking';  // ููุน ุงูุฅุดุนุงุฑ
        $notification->is_read = 0; // ุชุนููู ุงูุฅุดุนุงุฑ ูุบูุฑ ููุฑูุก
        $notification->save();
    }
    
    private function sendNotificationToDoctor($appointment)
    {
        // ุฅุฑุณุงู ุฅุดุนุงุฑ ููุทุจูุจ ุจุฃู ูุฏูู ููุนุฏูุง ูุน ูุฑูุถ
        $doctor = Doctor::find($appointment->doctor_id); // ุงูุญุตูู ุนูู ุงูุทุจูุจ ุจุงุณุชุฎุฏุงู doctor_id
    
        $notification = new Notification();
        $notification->user_id = $doctor->user_id;  // ุชุญุฏูุฏ ุงููุณุชุฎุฏู (ุงูุทุจูุจ)
        $notification->created_by = auth()->user()->id ?? $appointment->hospital->user_id; // ูู ูุงู ุจุฅูุดุงุก ุงูุฅุดุนุงุฑ (ุงููุณุชุดูู)
        $notification->title = 'ุชู ุญุฌุฒ ููุนุฏ ูู';
        $notification->message = 'ููุฏ ุชู ุญุฌุฒ ููุนุฏ ูุนู ูู ูุจู ุงููุฑูุถ ' . $appointment->patient->name . ' ูู ูุณุชุดูู ' . $appointment->hospital->hospital_name . '.';
        $notification->type = 'booking';  // ููุน ุงูุฅุดุนุงุฑ
        $notification->is_read = 0; // ุชุนููู ุงูุฅุดุนุงุฑ ูุบูุฑ ููุฑูุก
        $notification->save();
    }


    public function getHospitalAppointments(Request $request)
    {
        // ุงูุญุตูู ุนูู ุจูุงูุงุช ุงููุณุชุฎุฏู
        $user = auth()->user();
        
        // ุงูุชุญูู ูู ุงููุณุชุดูู ุงููุฑุชุจุทุฉ ุจุงููุณุชุฎุฏู
        $hospitalId = $user->hospital_id;
        
        // ุงูุชุญูู ุฅุฐุง ูุงู ุงููุณุชุฎุฏู ูุฑุชุจุทูุง ุจูุณุชุดูู
        if (!$hospitalId) {
            return response()->json(['error' => 'ุงููุณุชุฎุฏู ููุณ ูุฑุชุจุทูุง ุจุฃู ูุณุชุดูู.'], 400);
        }
        
        // ุงูุจุญุซ ุนู ุฌููุน ุงูุญุฌูุฒุงุช ูููุณุชุดูู ูุญุงูุฉ ุงูุญุฌุฒ "ููุงููุฉ"
        $appointments = Appointment::where('hospital_id', $hospitalId)
                                   ->where('status', 'Confirmed')  // ุฌูุจ ุงูุญุฌูุฒุงุช ุฐุงุช ุงูุญุงูุฉ "ููุงููุฉ"
                                   ->with([
                                       'patient',
                                       'patient.medicalRecords.recordMedications.medication',  // ุงูุฃุฏููุฉ ุงููุฑุชุจุทุฉ ุจุงูุณุฌู
                                       'patient.medicalRecords.medicalRecordTests.test',  // ุงููุญูุตุงุช ุงููุฑุชุจุทุฉ ุจุงูุณุฌู
                                       'patient.medicalRecords.doctor',  // ุงูุทุจูุจ ุงููุฑุชุจุท ุจุงูุณุฌู
                                       'patient.medicalRecords.hospital',  // ุงููุณุชุดูู ุงููุฑุชุจุทุฉ ุจุงูุณุฌู
                                       'schedule'  // ุฑุจุท ุงูููุนุฏ ูุน ุฌุฏูู ููุงุนูุฏ ุงูุทุจูุจ
                                   ])
                                   ->get();
        
        // ุงูุชุญูู ุฅุฐุง ูุงูุช ุงูุญุฌูุฒุงุช ูุงุฑุบุฉ
        if ($appointments->isEmpty()) {
            return response()->json(['message' => 'ูุง ุชูุฌุฏ ุญุฌูุฒุงุช ููุงูู ุนูููุง ูููุณุชุดูู.'], 404);
        }
        
        // ุฅุฑุฌุงุน ุงูุญุฌูุฒุงุช ูุน ุชูุงุตูู ุงููุฑุถู ูุงูุณุฌูุงุช ุงูุทุจูุฉ ูุงูุฃุฏููุฉ ูุงููุญูุตุงุช
        return response()->json([
            'appointments' => $appointments->map(function ($appointment) {
                $schedule = $appointment->schedule;  // ุฌุฏูู ููุงุนูุฏ ุงูุทุจูุจ ุงููุฑุชุจุท ุจุงูููุนุฏ
                $appointmentStartTime = Carbon::parse($schedule->start_time);
                $appointmentEndTime = Carbon::parse($schedule->end_time);
    
                return [
                    'appointment_id' => $appointment->appointment_id,
                    'patient_name' => $appointment->patient->patient_name,
                    'appointment_start_time' => $appointmentStartTime->toTimeString(),
                    'appointment_end_time' => $appointmentEndTime->toTimeString(),
                    'day_of_week' => $schedule->day_of_week, // ููู ุงูุฃุณุจูุน
                    'status' => $appointment->status, // ุญุงูุฉ ุงูููุนุฏ
                    
                    // ุฅุถุงูุฉ ุงุณู ุงูุทุจูุจ ุจุฏูุงู ูู ุงูุชุงุฑูุฎ
                    'doctor_name' => $appointment->patient->medicalRecords->first()->doctor->doctor_name ?? null,
    
                    // ุชูุงุตูู ุงูุณุฌู ุงูุทุจู
                    'medical_records' => $appointment->patient->medicalRecords->map(function ($record) {
                        return [
                            'medical_record_id' => $record->medical_record_id,
                            'notes' => $record->notes,
                            'created_at' => $record->created_at,
                            
                            // ุงุณู ุงูุทุจูุจ
                            'doctor_name' => $record->doctor ? $record->doctor->doctor_name : null,
            
                            // ุงุณู ุงููุณุชุดูู
                            'hospital_name' => $record->hospital ? $record->hospital->hospital_name : null,
            
                            // ุงูุฃุฏููุฉ ุงููุฑุชุจุทุฉ ุจุงูุณุฌู
                            'medications' => $record->recordMedications->map(function ($rm) {
                                return $rm->medication->medication_name ?? null;
                            })->filter(),
            
                            // ุงููุญูุตุงุช ุงููุฑุชุจุทุฉ ุจุงูุณุฌู
                            'tests' => $record->medicalRecordTests->map(function ($test) {
                                return [
                                    'test_name' => $test->test->test_name ?? null,
                                    'result' => $test->result_value
                                ];
                            })->filter()
                        ];
                    })
                ];
            })
        ], 200);
    }
    
    public function getDoctorAppointments(Request $request)
    {
        // ุงูุญุตูู ุนูู ุจูุงูุงุช ุงููุณุชุฎุฏู
        $user = auth()->user();
        
        // ุงูุชุญูู ูู ุงูุทุจูุจ ุงููุฑุชุจุท ุจุงููุณุชุฎุฏู
        $doctorId = $user->doctor_id;
        
        // ุงูุชุญูู ุฅุฐุง ูุงู ุงููุณุชุฎุฏู ูุฑุชุจุทูุง ุจุทุจูุจ
        if (!$doctorId) {
            return response()->json(['error' => 'ุงููุณุชุฎุฏู ููุณ ูุฑุชุจุทูุง ุจุฃู ุทุจูุจ.'], 400);
        }
        
        // ุงูุจุญุซ ุนู ุฌููุน ุงูุญุฌูุฒุงุช ููุทุจูุจ ูุญุงูุฉ ุงูุญุฌุฒ "ููุงููุฉ"
        $appointments = Appointment::where('doctor_id', $doctorId)
                                   ->where('status', 'Confirmed')  // ุฌูุจ ุงูุญุฌูุฒุงุช ุฐุงุช ุงูุญุงูุฉ "ููุงููุฉ"
                                   ->with([
                                       'patient',
                                       'patient.medicalRecords.recordMedications.medication',  // ุงูุฃุฏููุฉ ุงููุฑุชุจุทุฉ ุจุงูุณุฌู
                                       'patient.medicalRecords.medicalRecordTests.test',  // ุงููุญูุตุงุช ุงููุฑุชุจุทุฉ ุจุงูุณุฌู
                                       'patient.medicalRecords.hospital',  // ุงููุณุชุดูู ุงููุฑุชุจุทุฉ ุจุงูุณุฌู
                                       'schedule'  // ุฑุจุท ุงูููุนุฏ ูุน ุฌุฏูู ููุงุนูุฏ ุงูุทุจูุจ
                                   ])
                                   ->get();
        
        // ุงูุชุญูู ุฅุฐุง ูุงูุช ุงูุญุฌูุฒุงุช ูุงุฑุบุฉ
        if ($appointments->isEmpty()) {
            return response()->json(['message' => 'ูุง ุชูุฌุฏ ุญุฌูุฒุงุช ููุงูู ุนูููุง ููุทุจูุจ.'], 404);
        }
        
        // ุฅุฑุฌุงุน ุงูุญุฌูุฒุงุช ูุน ุชูุงุตูู ุงููุฑุถู ูุงูุณุฌูุงุช ุงูุทุจูุฉ ูุงูุฃุฏููุฉ ูุงููุญูุตุงุช
        return response()->json([
            'appointments' => $appointments->map(function ($appointment) {
                $schedule = $appointment->schedule;  // ุฌุฏูู ููุงุนูุฏ ุงูุทุจูุจ ุงููุฑุชุจุท ุจุงูููุนุฏ
                $appointmentStartTime = Carbon::parse($schedule->start_time);
                $appointmentEndTime = Carbon::parse($schedule->end_time);
        
                return [
                    'appointment_id' => $appointment->appointment_id,
                    'patient_name' => $appointment->patient->patient_name,
                    'appointment_start_time' => $appointmentStartTime->toTimeString(),
                    'appointment_end_time' => $appointmentEndTime->toTimeString(),
                    'day_of_week' => $schedule->day_of_week, // ููู ุงูุฃุณุจูุน
                    'status' => $appointment->status, // ุญุงูุฉ ุงูููุนุฏ
                    
                    // ุฅุถุงูุฉ ุงุณู ุงููุณุชุดูู ุจุฏูุงู ูู ุงุณู ุงูุทุจูุจ
                    'hospital_name' => $appointment->patient->medicalRecords->first()->hospital->hospital_name ?? null,
        
                    // ุชูุงุตูู ุงูุณุฌู ุงูุทุจู
                    'medical_records' => $appointment->patient->medicalRecords->map(function ($record) {
                        return [
                            'medical_record_id' => $record->medical_record_id,
                            'notes' => $record->notes,
                            'created_at' => Carbon::parse($record->created_at)->translatedFormat('j F Yุ h:i A'),

                            
                            // ุงุณู ุงููุณุชุดูู
                            'hospital_name' => $record->hospital ? $record->hospital->hospital_name : null,
                    
                            // ุงูุฃุฏููุฉ ุงููุฑุชุจุทุฉ ุจุงูุณุฌู
                            'medications' => $record->recordMedications->map(function ($rm) {
                                return $rm->medication->medication_name ?? null;
                            })->filter(),
                    
                            // ุงููุญูุตุงุช ุงููุฑุชุจุทุฉ ุจุงูุณุฌู
                            'tests' => $record->medicalRecordTests->map(function ($test) {
                                return [
                                    'test_name' => $test->test->test_name ?? null,
                                    'result' => $test->result_value
                                ];
                            })->filter()
                        ];
                    })
                ];
            })
        ], 200);
    }
    

    

public function cancelAppointment(Request $request, $appointmentId)
{
    // ุงูุญุตูู ุนูู ุจูุงูุงุช ุงููุณุชุฎุฏู
    $user = auth()->user();

    // ุงูุชุญูู ูู ุงููุฑูุถ ุงููุฑุชุจุท ุจุงููุณุชุฎุฏู
    $patientId = $user->patient_id;

    // ุงูุชุญูู ุฅุฐุง ูุงู ุงููุฑูุถ ูุฑุชุจุทูุง ุจุญุฌุฒ
    $appointment = Appointment::where('appointment_id', $appointmentId)
                              ->where('patient_id', $patientId)
                              ->first();

    if (!$appointment) {
        return response()->json(['error' => 'ุงูุญุฌุฒ ุบูุฑ ููุฌูุฏ ุฃู ููุณ ูููุฑูุถ.'], 400);
    }

    // ุชุญุฏูุซ ุญุงูุฉ ุงูุญุฌุฒ ุฅูู "ูููุบู"
    $appointment->status = 'Cancelled';
    $appointment->save();

    // ุฅุฐุง ุฃุฑุฏุช ุญุฐู ุงูุญุฌุฒ ููุงุฆููุงุ ุงุณุชุฎุฏู:
    // $appointment->delete();

    return response()->json(['message' => 'ุชู ุฅูุบุงุก ุงูุญุฌุฒ ุจูุฌุงุญ.'], 200);
}

public function getPatientAppointments()
{
    // ุฌูุจ ุงููุณุชุฎุฏู ุงูุญุงูู
    $user = auth()->user();

    // ุงูุชุฃูุฏ ูู ุฃู ุงููุณุชุฎุฏู ูุฏูู patient_id
    if (!$user->patient_id) {
        return response()->json(['error' => 'ุงููุณุชุฎุฏู ููุณ ูุฑูุถุงู.'], 403);
    }

    // ุฌูุจ ุญุฌูุฒุงุช ุงููุฑูุถ
    $appointments = Appointment::where('patient_id', $user->patient_id)
                                ->with(['doctor', 'hospital', 'schedule'])
                                ->get();

    if ($appointments->isEmpty()) {
        return response()->json(['message' => 'ูุง ุชูุฌุฏ ุญุฌูุฒุงุช ููุฐุง ุงููุฑูุถ.'], 404);
    }

    // ุฅุฑุฌุงุน ุจูุงูุงุช ุงูุญุฌุฒ
    return response()->json([
        'appointments' => $appointments->map(function ($appointment) {
            return [
                'appointment_id' => $appointment->appointment_id,
                'doctor_name' => $appointment->doctor->doctor_name ?? null,
                'hospital_name' => $appointment->hospital->hospital_name ?? null,
                'day_of_week' => $appointment->schedule->day_of_week ?? null,
                'start_time' => Carbon::parse($appointment->schedule->start_time)->translatedFormat('g:i A') ?? null,
                'end_time' => Carbon::parse($appointment->schedule->end_time)->translatedFormat('g:i A') ?? null,
                'status' => $appointment->status,
                'created_at' => Carbon::parse($appointment->created_at)->translatedFormat('l j F Y - g:i A'),
            ];
        }),
    ], 200);
}
public function completeAppointment($appointmentId)
{
    // ุงูุจุญุซ ุนู ุงูููุนุฏ ุจุงุณุชุฎุฏุงู ุงููุนุฑู
    $appointment = Appointment::find($appointmentId);

    // ุงูุชุญูู ุฅุฐุง ูุงู ุงูููุนุฏ ููุฌูุฏูุง
    if (!$appointment) {
        return response()->json(['error' => 'ุงูููุนุฏ ุบูุฑ ููุฌูุฏ.'], 404);
    }

    // ุงูุชุญูู ูู ุญุงูุฉ ุงูููุนุฏ ุฅุฐุง ูุงูุช "Confirmed"
    if ($appointment->status !== 'Confirmed') {
        return response()->json(['error' => 'ูุง ูููู ุฅููุงู ุงูููุนุฏ ุฅูุง ุฅุฐุง ูุงู ูู ุญุงูุฉ "ููุงููุฉ".'], 400);
    }

    // ุชุญุฏูุซ ุงูุญุงูุฉ ุฅูู "Completed"
    $appointment->status = 'Completed';
    $appointment->save();

    return response()->json(['message' => 'ุชู ุชุญููู ุงูููุนุฏ ุฅูู ููุชูู ุจูุฌุงุญ.']);

}


}
 
